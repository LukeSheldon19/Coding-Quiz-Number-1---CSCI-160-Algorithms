import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

   public static int diagonalDifference(List<List<Integer>> arr) {
    // Check if the matrix is square
    int numRows = arr.size();
    int numCols = arr.get(0).size();
    
    if (numRows != numCols) {
        throw new IllegalArgumentException("Input matrix must be square.");
    }

    int sum1 = 0;
    int sum2 = 0;

    int c1 = 0;
    int c2 = numRows - 1;

    for (int r = 0; r < numRows; r++) {
        for (int c = 0; c < numCols; c++) {

            if (c == c1) {
                sum1 += arr.get(r).get(c1);
            }

            if (c == c2) {
                sum2 += arr.get(r).get(c2);
            }
        }

        c1++;
        c2--;
    }

    return Math.abs(sum1 - sum2);
   }
}


public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, n).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        int result = Result.diagonalDifference(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
